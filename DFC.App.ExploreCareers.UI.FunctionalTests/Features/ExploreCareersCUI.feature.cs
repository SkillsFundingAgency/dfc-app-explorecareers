// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (https://www.specflow.org/).
//      SpecFlow Version:3.9.0.0
//      SpecFlow Generator Version:3.9.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace DFC.App.ExploreCareers.UI.FunctionalTests.Features
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.9.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public partial class ExploreCareersCUIFeature : object, Xunit.IClassFixture<ExploreCareersCUIFeature.FixtureData>, System.IDisposable
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private static string[] featureTags = ((string[])(null));
        
        private Xunit.Abstractions.ITestOutputHelper _testOutputHelper;
        
#line 1 "ExploreCareersCUI.feature"
#line hidden
        
        public ExploreCareersCUIFeature(ExploreCareersCUIFeature.FixtureData fixtureData, DFC_App_ExploreCareers_UI_FunctionalTests_XUnitAssemblyFixture assemblyFixture, Xunit.Abstractions.ITestOutputHelper testOutputHelper)
        {
            this._testOutputHelper = testOutputHelper;
            this.TestInitialize();
        }
        
        public static void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-GB"), "Features", "ExploreCareersCUI", "\tAs a citizen on the National Careers website \r\n\tI want to view and search job pr" +
                    "ofiles information for a particular job category", ProgrammingLanguage.CSharp, featureTags);
            testRunner.OnFeatureStart(featureInfo);
        }
        
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public void TestInitialize()
        {
        }
        
        public void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Xunit.Abstractions.ITestOutputHelper>(_testOutputHelper);
        }
        
        public void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        void System.IDisposable.Dispose()
        {
            this.TestTearDown();
        }
        
        public virtual void TCA01_JobCategoryLinksVerification(string jobCategory, string[] exampleTags)
        {
            string[] tagsOfScenario = exampleTags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("Job category", jobCategory);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("TCA01 - Job category links verification", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 5
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 6
 testRunner.Given("I am at the \"Explore careers\" page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 7
 testRunner.When(string.Format("I click on the {0} link", jobCategory), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 8
 testRunner.Then(string.Format("I am taken to the {0} page", jobCategory), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="TCA01 - Job category links verification: Administration")]
        [Xunit.TraitAttribute("FeatureTitle", "ExploreCareersCUI")]
        [Xunit.TraitAttribute("Description", "TCA01 - Job category links verification: Administration")]
        public void TCA01_JobCategoryLinksVerification_Administration()
        {
#line 5
this.TCA01_JobCategoryLinksVerification("Administration", ((string[])(null)));
#line hidden
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="TCA01 - Job category links verification: Animal care")]
        [Xunit.TraitAttribute("FeatureTitle", "ExploreCareersCUI")]
        [Xunit.TraitAttribute("Description", "TCA01 - Job category links verification: Animal care")]
        public void TCA01_JobCategoryLinksVerification_AnimalCare()
        {
#line 5
this.TCA01_JobCategoryLinksVerification("Animal care", ((string[])(null)));
#line hidden
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="TCA01 - Job category links verification: Business and finance")]
        [Xunit.TraitAttribute("FeatureTitle", "ExploreCareersCUI")]
        [Xunit.TraitAttribute("Description", "TCA01 - Job category links verification: Business and finance")]
        public void TCA01_JobCategoryLinksVerification_BusinessAndFinance()
        {
#line 5
this.TCA01_JobCategoryLinksVerification("Business and finance", ((string[])(null)));
#line hidden
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="TCA01 - Job category links verification: Computing, technology and digital")]
        [Xunit.TraitAttribute("FeatureTitle", "ExploreCareersCUI")]
        [Xunit.TraitAttribute("Description", "TCA01 - Job category links verification: Computing, technology and digital")]
        public void TCA01_JobCategoryLinksVerification_ComputingTechnologyAndDigital()
        {
#line 5
this.TCA01_JobCategoryLinksVerification("Computing, technology and digital", ((string[])(null)));
#line hidden
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="TCA01 - Job category links verification: Emergency and uniform services")]
        [Xunit.TraitAttribute("FeatureTitle", "ExploreCareersCUI")]
        [Xunit.TraitAttribute("Description", "TCA01 - Job category links verification: Emergency and uniform services")]
        public void TCA01_JobCategoryLinksVerification_EmergencyAndUniformServices()
        {
#line 5
this.TCA01_JobCategoryLinksVerification("Emergency and uniform services", ((string[])(null)));
#line hidden
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="TCA01 - Job category links verification: Law and legal")]
        [Xunit.TraitAttribute("FeatureTitle", "ExploreCareersCUI")]
        [Xunit.TraitAttribute("Description", "TCA01 - Job category links verification: Law and legal")]
        public void TCA01_JobCategoryLinksVerification_LawAndLegal()
        {
#line 5
this.TCA01_JobCategoryLinksVerification("Law and legal", ((string[])(null)));
#line hidden
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="TCA01 - Job category links verification: Manufacturing")]
        [Xunit.TraitAttribute("FeatureTitle", "ExploreCareersCUI")]
        [Xunit.TraitAttribute("Description", "TCA01 - Job category links verification: Manufacturing")]
        public void TCA01_JobCategoryLinksVerification_Manufacturing()
        {
#line 5
this.TCA01_JobCategoryLinksVerification("Manufacturing", ((string[])(null)));
#line hidden
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="TCA01 - Job category links verification: Science and research")]
        [Xunit.TraitAttribute("FeatureTitle", "ExploreCareersCUI")]
        [Xunit.TraitAttribute("Description", "TCA01 - Job category links verification: Science and research")]
        public void TCA01_JobCategoryLinksVerification_ScienceAndResearch()
        {
#line 5
this.TCA01_JobCategoryLinksVerification("Science and research", ((string[])(null)));
#line hidden
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="TCA01 - Job category links verification: Transport")]
        [Xunit.TraitAttribute("FeatureTitle", "ExploreCareersCUI")]
        [Xunit.TraitAttribute("Description", "TCA01 - Job category links verification: Transport")]
        public void TCA01_JobCategoryLinksVerification_Transport()
        {
#line 5
this.TCA01_JobCategoryLinksVerification("Transport", ((string[])(null)));
#line hidden
        }
        
        public virtual void TCA02_SearchFieldAutosuggestFieldPopulation(string page, string searchTerm, string autoSuggestOption, string[] exampleTags)
        {
            string[] tagsOfScenario = exampleTags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("page", page);
            argumentsOfScenario.Add("search term", searchTerm);
            argumentsOfScenario.Add("auto suggest option", autoSuggestOption);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("TCA02 - Search field autosuggest field population", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 21
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 22
 testRunner.Given(string.Format("I navigate to the {0} page", page), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 23
 testRunner.When(string.Format("I enter the search term {0} in the search field", searchTerm), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 24
 testRunner.Then(string.Format("I am able to select {0} from the resultant auto suggest", autoSuggestOption), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 25
 testRunner.And(string.Format("{0} is populated in the search field", autoSuggestOption), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="TCA02 - Search field autosuggest field population: Variant 0")]
        [Xunit.TraitAttribute("FeatureTitle", "ExploreCareersCUI")]
        [Xunit.TraitAttribute("Description", "TCA02 - Search field autosuggest field population: Variant 0")]
        public void TCA02_SearchFieldAutosuggestFieldPopulation_Variant0()
        {
#line 21
this.TCA02_SearchFieldAutosuggestFieldPopulation("Explore careers", "nur", "Nursing associate", ((string[])(null)));
#line hidden
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="TCA02 - Search field autosuggest field population: Variant 1")]
        [Xunit.TraitAttribute("FeatureTitle", "ExploreCareersCUI")]
        [Xunit.TraitAttribute("Description", "TCA02 - Search field autosuggest field population: Variant 1")]
        public void TCA02_SearchFieldAutosuggestFieldPopulation_Variant1()
        {
#line 21
this.TCA02_SearchFieldAutosuggestFieldPopulation("Explore careers", "pi", "Aircraft pilot", ((string[])(null)));
#line hidden
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="TCA02 - Search field autosuggest field population: Variant 2")]
        [Xunit.TraitAttribute("FeatureTitle", "ExploreCareersCUI")]
        [Xunit.TraitAttribute("Description", "TCA02 - Search field autosuggest field population: Variant 2")]
        public void TCA02_SearchFieldAutosuggestFieldPopulation_Variant2()
        {
#line 21
this.TCA02_SearchFieldAutosuggestFieldPopulation("Explore careers", "la", "Lawyer", ((string[])(null)));
#line hidden
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="TCA02 - Search field autosuggest field population: Variant 3")]
        [Xunit.TraitAttribute("FeatureTitle", "ExploreCareersCUI")]
        [Xunit.TraitAttribute("Description", "TCA02 - Search field autosuggest field population: Variant 3")]
        public void TCA02_SearchFieldAutosuggestFieldPopulation_Variant3()
        {
#line 21
this.TCA02_SearchFieldAutosuggestFieldPopulation("Job profiles", "nur", "Nursing associate", ((string[])(null)));
#line hidden
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="TCA02 - Search field autosuggest field population: Variant 4")]
        [Xunit.TraitAttribute("FeatureTitle", "ExploreCareersCUI")]
        [Xunit.TraitAttribute("Description", "TCA02 - Search field autosuggest field population: Variant 4")]
        public void TCA02_SearchFieldAutosuggestFieldPopulation_Variant4()
        {
#line 21
this.TCA02_SearchFieldAutosuggestFieldPopulation("Job profiles", "pi", "Aircraft pilot", ((string[])(null)));
#line hidden
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="TCA02 - Search field autosuggest field population: Variant 5")]
        [Xunit.TraitAttribute("FeatureTitle", "ExploreCareersCUI")]
        [Xunit.TraitAttribute("Description", "TCA02 - Search field autosuggest field population: Variant 5")]
        public void TCA02_SearchFieldAutosuggestFieldPopulation_Variant5()
        {
#line 21
this.TCA02_SearchFieldAutosuggestFieldPopulation("Job profiles", "la", "Lawyer", ((string[])(null)));
#line hidden
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="TCA02 - Search field autosuggest field population: Variant 6")]
        [Xunit.TraitAttribute("FeatureTitle", "ExploreCareersCUI")]
        [Xunit.TraitAttribute("Description", "TCA02 - Search field autosuggest field population: Variant 6")]
        public void TCA02_SearchFieldAutosuggestFieldPopulation_Variant6()
        {
#line 21
this.TCA02_SearchFieldAutosuggestFieldPopulation("Search results", "nur", "Nursing associate", ((string[])(null)));
#line hidden
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="TCA02 - Search field autosuggest field population: Variant 7")]
        [Xunit.TraitAttribute("FeatureTitle", "ExploreCareersCUI")]
        [Xunit.TraitAttribute("Description", "TCA02 - Search field autosuggest field population: Variant 7")]
        public void TCA02_SearchFieldAutosuggestFieldPopulation_Variant7()
        {
#line 21
this.TCA02_SearchFieldAutosuggestFieldPopulation("Search results", "pi", "Aircraft pilot", ((string[])(null)));
#line hidden
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="TCA02 - Search field autosuggest field population: Variant 8")]
        [Xunit.TraitAttribute("FeatureTitle", "ExploreCareersCUI")]
        [Xunit.TraitAttribute("Description", "TCA02 - Search field autosuggest field population: Variant 8")]
        public void TCA02_SearchFieldAutosuggestFieldPopulation_Variant8()
        {
#line 21
this.TCA02_SearchFieldAutosuggestFieldPopulation("Search results", "la", "Lawyer", ((string[])(null)));
#line hidden
        }
        
        public virtual void TCA03_SearchTermNotFound(string page, string searchTerm, string[] exampleTags)
        {
            string[] tagsOfScenario = exampleTags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("page", page);
            argumentsOfScenario.Add("search term", searchTerm);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("TCA03 - Search term not found", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 38
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 39
 testRunner.Given(string.Format("I navigate to the {0} page", page), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 40
 testRunner.When(string.Format("I enter the non existent search term {0} in the search field", searchTerm), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 41
 testRunner.And("I click the search button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 42
 testRunner.Then("I get the message \"0 results found - try again using a different job title\" in th" +
                        "e search results page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="TCA03 - Search term not found: Explore careers")]
        [Xunit.TraitAttribute("FeatureTitle", "ExploreCareersCUI")]
        [Xunit.TraitAttribute("Description", "TCA03 - Search term not found: Explore careers")]
        public void TCA03_SearchTermNotFound_ExploreCareers()
        {
#line 38
this.TCA03_SearchTermNotFound("Explore careers", "aaa", ((string[])(null)));
#line hidden
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="TCA03 - Search term not found: Job profiles")]
        [Xunit.TraitAttribute("FeatureTitle", "ExploreCareersCUI")]
        [Xunit.TraitAttribute("Description", "TCA03 - Search term not found: Job profiles")]
        public void TCA03_SearchTermNotFound_JobProfiles()
        {
#line 38
this.TCA03_SearchTermNotFound("Job profiles", "sss", ((string[])(null)));
#line hidden
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="TCA03 - Search term not found: Search results")]
        [Xunit.TraitAttribute("FeatureTitle", "ExploreCareersCUI")]
        [Xunit.TraitAttribute("Description", "TCA03 - Search term not found: Search results")]
        public void TCA03_SearchTermNotFound_SearchResults()
        {
#line 38
this.TCA03_SearchTermNotFound("Search results", "zzz", ((string[])(null)));
#line hidden
        }
        
        public virtual void TCA04_AutoSuggestingSearchTermsOnSearchTermMisspelling(string page, string searchTerm, string suggestedSearchTerm, string[] exampleTags)
        {
            string[] tagsOfScenario = exampleTags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("page", page);
            argumentsOfScenario.Add("search term", searchTerm);
            argumentsOfScenario.Add("suggested search term", suggestedSearchTerm);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("TCA04 - Auto suggesting search terms on search term misspelling", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 49
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 50
 testRunner.Given(string.Format("I navigate to the {0} page", page), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 51
 testRunner.When(string.Format("I enter the search term {0} in the search field", searchTerm), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 52
 testRunner.And("I click the search button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 53
 testRunner.Then(string.Format("I am taken to the search results page with the message Did you mean {0} displayed" +
                            "", suggestedSearchTerm), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 54
 testRunner.And("the message \"0 results found - try again using a different job title\" displayed b" +
                        "elow it", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="TCA04 - Auto suggesting search terms on search term misspelling: Explore careers")]
        [Xunit.TraitAttribute("FeatureTitle", "ExploreCareersCUI")]
        [Xunit.TraitAttribute("Description", "TCA04 - Auto suggesting search terms on search term misspelling: Explore careers")]
        public void TCA04_AutoSuggestingSearchTermsOnSearchTermMisspelling_ExploreCareers()
        {
#line 49
this.TCA04_AutoSuggestingSearchTermsOnSearchTermMisspelling("Explore careers", "nuurse", "nurse", ((string[])(null)));
#line hidden
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="TCA04 - Auto suggesting search terms on search term misspelling: Job profiles")]
        [Xunit.TraitAttribute("FeatureTitle", "ExploreCareersCUI")]
        [Xunit.TraitAttribute("Description", "TCA04 - Auto suggesting search terms on search term misspelling: Job profiles")]
        public void TCA04_AutoSuggestingSearchTermsOnSearchTermMisspelling_JobProfiles()
        {
#line 49
this.TCA04_AutoSuggestingSearchTermsOnSearchTermMisspelling("Job profiles", "lawwwyer", "lawyer", ((string[])(null)));
#line hidden
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="TCA04 - Auto suggesting search terms on search term misspelling: Search results")]
        [Xunit.TraitAttribute("FeatureTitle", "ExploreCareersCUI")]
        [Xunit.TraitAttribute("Description", "TCA04 - Auto suggesting search terms on search term misspelling: Search results")]
        public void TCA04_AutoSuggestingSearchTermsOnSearchTermMisspelling_SearchResults()
        {
#line 49
this.TCA04_AutoSuggestingSearchTermsOnSearchTermMisspelling("Search results", "phlebotomizzzt", "phlebotomist", ((string[])(null)));
#line hidden
        }
        
        public virtual void TCA05_MisspeltSearchTermsAutoSuggestionLinkVerification(string page, string searchTerm, string suggestedSearchTerm, string[] exampleTags)
        {
            string[] tagsOfScenario = exampleTags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("page", page);
            argumentsOfScenario.Add("search term", searchTerm);
            argumentsOfScenario.Add("suggested search term", suggestedSearchTerm);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("TCA05 - Misspelt search terms auto suggestion link verification", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 61
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 62
 testRunner.Given(string.Format("I navigate to the {0} page", page), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 63
 testRunner.And(string.Format("I enter the search term {0} in the search field", searchTerm), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 64
 testRunner.And("I click the search button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 65
 testRunner.And(string.Format("I am taken to the search results page with the message Did you mean {0} displayed" +
                            "", suggestedSearchTerm), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 66
 testRunner.When("I click the link in the message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 67
 testRunner.Then(string.Format("the url bears the suggested search term {0} as its parameter", suggestedSearchTerm), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="TCA05 - Misspelt search terms auto suggestion link verification: Variant 0")]
        [Xunit.TraitAttribute("FeatureTitle", "ExploreCareersCUI")]
        [Xunit.TraitAttribute("Description", "TCA05 - Misspelt search terms auto suggestion link verification: Variant 0")]
        public void TCA05_MisspeltSearchTermsAutoSuggestionLinkVerification_Variant0()
        {
#line 61
this.TCA05_MisspeltSearchTermsAutoSuggestionLinkVerification("Explore careers", "nuurse", "nurse", ((string[])(null)));
#line hidden
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="TCA05 - Misspelt search terms auto suggestion link verification: Variant 1")]
        [Xunit.TraitAttribute("FeatureTitle", "ExploreCareersCUI")]
        [Xunit.TraitAttribute("Description", "TCA05 - Misspelt search terms auto suggestion link verification: Variant 1")]
        public void TCA05_MisspeltSearchTermsAutoSuggestionLinkVerification_Variant1()
        {
#line 61
this.TCA05_MisspeltSearchTermsAutoSuggestionLinkVerification("Explore careers", "lawwwyer", "lawyer", ((string[])(null)));
#line hidden
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="TCA05 - Misspelt search terms auto suggestion link verification: Variant 2")]
        [Xunit.TraitAttribute("FeatureTitle", "ExploreCareersCUI")]
        [Xunit.TraitAttribute("Description", "TCA05 - Misspelt search terms auto suggestion link verification: Variant 2")]
        public void TCA05_MisspeltSearchTermsAutoSuggestionLinkVerification_Variant2()
        {
#line 61
this.TCA05_MisspeltSearchTermsAutoSuggestionLinkVerification("Search results", "mechannic", "mechanic", ((string[])(null)));
#line hidden
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="TCA05 - Misspelt search terms auto suggestion link verification: Variant 3")]
        [Xunit.TraitAttribute("FeatureTitle", "ExploreCareersCUI")]
        [Xunit.TraitAttribute("Description", "TCA05 - Misspelt search terms auto suggestion link verification: Variant 3")]
        public void TCA05_MisspeltSearchTermsAutoSuggestionLinkVerification_Variant3()
        {
#line 61
this.TCA05_MisspeltSearchTermsAutoSuggestionLinkVerification("Search results", "astronautt", "astronaut", ((string[])(null)));
#line hidden
        }
        
        public virtual void TCA06_EmptySearchFields(string page, string[] exampleTags)
        {
            string[] tagsOfScenario = exampleTags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("page", page);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("TCA06 - Empty search fields", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 75
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 76
 testRunner.Given(string.Format("I navigate to the {0} page", page), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 77
 testRunner.And("the search field is empty", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 78
 testRunner.When("I click the search button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 79
 testRunner.Then("the page does not advance", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="TCA06 - Empty search fields: Explore careers")]
        [Xunit.TraitAttribute("FeatureTitle", "ExploreCareersCUI")]
        [Xunit.TraitAttribute("Description", "TCA06 - Empty search fields: Explore careers")]
        public void TCA06_EmptySearchFields_ExploreCareers()
        {
#line 75
this.TCA06_EmptySearchFields("Explore careers", ((string[])(null)));
#line hidden
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="TCA06 - Empty search fields: Search results")]
        [Xunit.TraitAttribute("FeatureTitle", "ExploreCareersCUI")]
        [Xunit.TraitAttribute("Description", "TCA06 - Empty search fields: Search results")]
        public void TCA06_EmptySearchFields_SearchResults()
        {
#line 75
this.TCA06_EmptySearchFields("Search results", ((string[])(null)));
#line hidden
        }
        
        public virtual void TCA07_ReconcilingSearchResultsCountWithNumberOfPagesReturned(string page, string searchTerm, string[] exampleTags)
        {
            string[] tagsOfScenario = exampleTags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("page", page);
            argumentsOfScenario.Add("search term", searchTerm);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("TCA07- Reconciling search results count with number of pages returned", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 85
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 86
 testRunner.Given(string.Format("I navigate to the {0} page", page), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 87
 testRunner.And(string.Format("I enter the search term {0} in the search field", searchTerm), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 88
 testRunner.And("I click the search button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 89
 testRunner.And("I retrieve the number of search results", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 90
 testRunner.When("I work out the number of result pages from the number of search results returned", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 91
 testRunner.Then("the number of search results returned is commensurate with the number of search r" +
                        "esult pages", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 92
 testRunner.And("the Next button is no longer present on the final page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="TCA07- Reconciling search results count with number of pages returned: Explore ca" +
            "reers")]
        [Xunit.TraitAttribute("FeatureTitle", "ExploreCareersCUI")]
        [Xunit.TraitAttribute("Description", "TCA07- Reconciling search results count with number of pages returned: Explore ca" +
            "reers")]
        public void TCA07_ReconcilingSearchResultsCountWithNumberOfPagesReturned_ExploreCareers()
        {
#line 85
this.TCA07_ReconcilingSearchResultsCountWithNumberOfPagesReturned("Explore careers", "nurse", ((string[])(null)));
#line hidden
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="TCA07- Reconciling search results count with number of pages returned: Job profil" +
            "es")]
        [Xunit.TraitAttribute("FeatureTitle", "ExploreCareersCUI")]
        [Xunit.TraitAttribute("Description", "TCA07- Reconciling search results count with number of pages returned: Job profil" +
            "es")]
        public void TCA07_ReconcilingSearchResultsCountWithNumberOfPagesReturned_JobProfiles()
        {
#line 85
this.TCA07_ReconcilingSearchResultsCountWithNumberOfPagesReturned("Job profiles", "lawyer", ((string[])(null)));
#line hidden
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="TCA07- Reconciling search results count with number of pages returned: Search res" +
            "ults")]
        [Xunit.TraitAttribute("FeatureTitle", "ExploreCareersCUI")]
        [Xunit.TraitAttribute("Description", "TCA07- Reconciling search results count with number of pages returned: Search res" +
            "ults")]
        public void TCA07_ReconcilingSearchResultsCountWithNumberOfPagesReturned_SearchResults()
        {
#line 85
this.TCA07_ReconcilingSearchResultsCountWithNumberOfPagesReturned("Search results", "phlebotomist", ((string[])(null)));
#line hidden
        }
        
        public virtual void TCA08_SearchResultsOnPressingTheEnterButton(string page, string searchTerm, string[] exampleTags)
        {
            string[] tagsOfScenario = exampleTags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("page", page);
            argumentsOfScenario.Add("search term", searchTerm);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("TCA08 - Search results on pressing the enter button", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 99
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 100
 testRunner.Given(string.Format("I navigate to the {0} page", page), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 101
 testRunner.And(string.Format("I enter the search term {0} in the search field", searchTerm), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 102
 testRunner.When("I press the Enter button instead of clicking search", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 103
 testRunner.Then("the search results screen is displayed.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="TCA08 - Search results on pressing the enter button: Explore careers")]
        [Xunit.TraitAttribute("FeatureTitle", "ExploreCareersCUI")]
        [Xunit.TraitAttribute("Description", "TCA08 - Search results on pressing the enter button: Explore careers")]
        public void TCA08_SearchResultsOnPressingTheEnterButton_ExploreCareers()
        {
#line 99
this.TCA08_SearchResultsOnPressingTheEnterButton("Explore careers", "nurse", ((string[])(null)));
#line hidden
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="TCA08 - Search results on pressing the enter button: Job profiles")]
        [Xunit.TraitAttribute("FeatureTitle", "ExploreCareersCUI")]
        [Xunit.TraitAttribute("Description", "TCA08 - Search results on pressing the enter button: Job profiles")]
        public void TCA08_SearchResultsOnPressingTheEnterButton_JobProfiles()
        {
#line 99
this.TCA08_SearchResultsOnPressingTheEnterButton("Job profiles", "lawyer", ((string[])(null)));
#line hidden
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="TCA08 - Search results on pressing the enter button: Search results")]
        [Xunit.TraitAttribute("FeatureTitle", "ExploreCareersCUI")]
        [Xunit.TraitAttribute("Description", "TCA08 - Search results on pressing the enter button: Search results")]
        public void TCA08_SearchResultsOnPressingTheEnterButton_SearchResults()
        {
#line 99
this.TCA08_SearchResultsOnPressingTheEnterButton("Search results", "phlebotomist", ((string[])(null)));
#line hidden
        }
        
        public virtual void TCA09_LinksVerificationsForOtherJobCategoriesSideSection(string jobCategory, string linkToTest, string[] exampleTags)
        {
            string[] tagsOfScenario = exampleTags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("Job category", jobCategory);
            argumentsOfScenario.Add("Link to test", linkToTest);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("TCA09 - Links verifications for Other job categories side section", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 110
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 111
 testRunner.Given(string.Format("I am at the \"Job categories\" web page for {0}", jobCategory), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 112
 testRunner.When(string.Format("I click on the {0} link", linkToTest), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 113
 testRunner.Then(string.Format("I am taken to the {0} page", linkToTest), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="TCA09 - Links verifications for Other job categories side section: Administration" +
            "")]
        [Xunit.TraitAttribute("FeatureTitle", "ExploreCareersCUI")]
        [Xunit.TraitAttribute("Description", "TCA09 - Links verifications for Other job categories side section: Administration" +
            "")]
        public void TCA09_LinksVerificationsForOtherJobCategoriesSideSection_Administration()
        {
#line 110
this.TCA09_LinksVerificationsForOtherJobCategoriesSideSection("Administration", "Travel and tourism", ((string[])(null)));
#line hidden
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="TCA09 - Links verifications for Other job categories side section: Animal care")]
        [Xunit.TraitAttribute("FeatureTitle", "ExploreCareersCUI")]
        [Xunit.TraitAttribute("Description", "TCA09 - Links verifications for Other job categories side section: Animal care")]
        public void TCA09_LinksVerificationsForOtherJobCategoriesSideSection_AnimalCare()
        {
#line 110
this.TCA09_LinksVerificationsForOtherJobCategoriesSideSection("Animal care", "Transport", ((string[])(null)));
#line hidden
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="TCA09 - Links verifications for Other job categories side section: Beauty and wel" +
            "lbeing")]
        [Xunit.TraitAttribute("FeatureTitle", "ExploreCareersCUI")]
        [Xunit.TraitAttribute("Description", "TCA09 - Links verifications for Other job categories side section: Beauty and wel" +
            "lbeing")]
        public void TCA09_LinksVerificationsForOtherJobCategoriesSideSection_BeautyAndWellbeing()
        {
#line 110
this.TCA09_LinksVerificationsForOtherJobCategoriesSideSection("Beauty and wellbeing", "Teaching and education", ((string[])(null)));
#line hidden
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="TCA09 - Links verifications for Other job categories side section: Business and f" +
            "inance")]
        [Xunit.TraitAttribute("FeatureTitle", "ExploreCareersCUI")]
        [Xunit.TraitAttribute("Description", "TCA09 - Links verifications for Other job categories side section: Business and f" +
            "inance")]
        public void TCA09_LinksVerificationsForOtherJobCategoriesSideSection_BusinessAndFinance()
        {
#line 110
this.TCA09_LinksVerificationsForOtherJobCategoriesSideSection("Business and finance", "Sports and leisure", ((string[])(null)));
#line hidden
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="TCA09 - Links verifications for Other job categories side section: Computing, tec" +
            "hnology and digital")]
        [Xunit.TraitAttribute("FeatureTitle", "ExploreCareersCUI")]
        [Xunit.TraitAttribute("Description", "TCA09 - Links verifications for Other job categories side section: Computing, tec" +
            "hnology and digital")]
        public void TCA09_LinksVerificationsForOtherJobCategoriesSideSection_ComputingTechnologyAndDigital()
        {
#line 110
this.TCA09_LinksVerificationsForOtherJobCategoriesSideSection("Computing, technology and digital", "Social care", ((string[])(null)));
#line hidden
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="TCA09 - Links verifications for Other job categories side section: Construction a" +
            "nd trades")]
        [Xunit.TraitAttribute("FeatureTitle", "ExploreCareersCUI")]
        [Xunit.TraitAttribute("Description", "TCA09 - Links verifications for Other job categories side section: Construction a" +
            "nd trades")]
        public void TCA09_LinksVerificationsForOtherJobCategoriesSideSection_ConstructionAndTrades()
        {
#line 110
this.TCA09_LinksVerificationsForOtherJobCategoriesSideSection("Construction and trades", "Science and research", ((string[])(null)));
#line hidden
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="TCA09 - Links verifications for Other job categories side section: Creative and m" +
            "edia")]
        [Xunit.TraitAttribute("FeatureTitle", "ExploreCareersCUI")]
        [Xunit.TraitAttribute("Description", "TCA09 - Links verifications for Other job categories side section: Creative and m" +
            "edia")]
        public void TCA09_LinksVerificationsForOtherJobCategoriesSideSection_CreativeAndMedia()
        {
#line 110
this.TCA09_LinksVerificationsForOtherJobCategoriesSideSection("Creative and media", "Retail and sales", ((string[])(null)));
#line hidden
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="TCA09 - Links verifications for Other job categories side section: Delivery and s" +
            "torage")]
        [Xunit.TraitAttribute("FeatureTitle", "ExploreCareersCUI")]
        [Xunit.TraitAttribute("Description", "TCA09 - Links verifications for Other job categories side section: Delivery and s" +
            "torage")]
        public void TCA09_LinksVerificationsForOtherJobCategoriesSideSection_DeliveryAndStorage()
        {
#line 110
this.TCA09_LinksVerificationsForOtherJobCategoriesSideSection("Delivery and storage", "Manufacturing", ((string[])(null)));
#line hidden
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="TCA09 - Links verifications for Other job categories side section: Emergency and " +
            "uniform services")]
        [Xunit.TraitAttribute("FeatureTitle", "ExploreCareersCUI")]
        [Xunit.TraitAttribute("Description", "TCA09 - Links verifications for Other job categories side section: Emergency and " +
            "uniform services")]
        public void TCA09_LinksVerificationsForOtherJobCategoriesSideSection_EmergencyAndUniformServices()
        {
#line 110
this.TCA09_LinksVerificationsForOtherJobCategoriesSideSection("Emergency and uniform services", "Managerial", ((string[])(null)));
#line hidden
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="TCA09 - Links verifications for Other job categories side section: Engineering an" +
            "d maintenance")]
        [Xunit.TraitAttribute("FeatureTitle", "ExploreCareersCUI")]
        [Xunit.TraitAttribute("Description", "TCA09 - Links verifications for Other job categories side section: Engineering an" +
            "d maintenance")]
        public void TCA09_LinksVerificationsForOtherJobCategoriesSideSection_EngineeringAndMaintenance()
        {
#line 110
this.TCA09_LinksVerificationsForOtherJobCategoriesSideSection("Engineering and maintenance", "Law and legal", ((string[])(null)));
#line hidden
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="TCA09 - Links verifications for Other job categories side section: Environment an" +
            "d land")]
        [Xunit.TraitAttribute("FeatureTitle", "ExploreCareersCUI")]
        [Xunit.TraitAttribute("Description", "TCA09 - Links verifications for Other job categories side section: Environment an" +
            "d land")]
        public void TCA09_LinksVerificationsForOtherJobCategoriesSideSection_EnvironmentAndLand()
        {
#line 110
this.TCA09_LinksVerificationsForOtherJobCategoriesSideSection("Environment and land", "Hospitality and food", ((string[])(null)));
#line hidden
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="TCA09 - Links verifications for Other job categories side section: Government ser" +
            "vices")]
        [Xunit.TraitAttribute("FeatureTitle", "ExploreCareersCUI")]
        [Xunit.TraitAttribute("Description", "TCA09 - Links verifications for Other job categories side section: Government ser" +
            "vices")]
        public void TCA09_LinksVerificationsForOtherJobCategoriesSideSection_GovernmentServices()
        {
#line 110
this.TCA09_LinksVerificationsForOtherJobCategoriesSideSection("Government services", "Home services", ((string[])(null)));
#line hidden
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="TCA09 - Links verifications for Other job categories side section: Healthcare")]
        [Xunit.TraitAttribute("FeatureTitle", "ExploreCareersCUI")]
        [Xunit.TraitAttribute("Description", "TCA09 - Links verifications for Other job categories side section: Healthcare")]
        public void TCA09_LinksVerificationsForOtherJobCategoriesSideSection_Healthcare()
        {
#line 110
this.TCA09_LinksVerificationsForOtherJobCategoriesSideSection("Healthcare", "Government services", ((string[])(null)));
#line hidden
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="TCA09 - Links verifications for Other job categories side section: Home services")]
        [Xunit.TraitAttribute("FeatureTitle", "ExploreCareersCUI")]
        [Xunit.TraitAttribute("Description", "TCA09 - Links verifications for Other job categories side section: Home services")]
        public void TCA09_LinksVerificationsForOtherJobCategoriesSideSection_HomeServices()
        {
#line 110
this.TCA09_LinksVerificationsForOtherJobCategoriesSideSection("Home services", "Healthcare", ((string[])(null)));
#line hidden
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="TCA09 - Links verifications for Other job categories side section: Hospitality an" +
            "d food")]
        [Xunit.TraitAttribute("FeatureTitle", "ExploreCareersCUI")]
        [Xunit.TraitAttribute("Description", "TCA09 - Links verifications for Other job categories side section: Hospitality an" +
            "d food")]
        public void TCA09_LinksVerificationsForOtherJobCategoriesSideSection_HospitalityAndFood()
        {
#line 110
this.TCA09_LinksVerificationsForOtherJobCategoriesSideSection("Hospitality and food", "Environment and land", ((string[])(null)));
#line hidden
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="TCA09 - Links verifications for Other job categories side section: Law and legal")]
        [Xunit.TraitAttribute("FeatureTitle", "ExploreCareersCUI")]
        [Xunit.TraitAttribute("Description", "TCA09 - Links verifications for Other job categories side section: Law and legal")]
        public void TCA09_LinksVerificationsForOtherJobCategoriesSideSection_LawAndLegal()
        {
#line 110
this.TCA09_LinksVerificationsForOtherJobCategoriesSideSection("Law and legal", "Engineering and maintenance", ((string[])(null)));
#line hidden
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="TCA09 - Links verifications for Other job categories side section: Managerial")]
        [Xunit.TraitAttribute("FeatureTitle", "ExploreCareersCUI")]
        [Xunit.TraitAttribute("Description", "TCA09 - Links verifications for Other job categories side section: Managerial")]
        public void TCA09_LinksVerificationsForOtherJobCategoriesSideSection_Managerial()
        {
#line 110
this.TCA09_LinksVerificationsForOtherJobCategoriesSideSection("Managerial", "Emergency and uniform services", ((string[])(null)));
#line hidden
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="TCA09 - Links verifications for Other job categories side section: Manufacturing")]
        [Xunit.TraitAttribute("FeatureTitle", "ExploreCareersCUI")]
        [Xunit.TraitAttribute("Description", "TCA09 - Links verifications for Other job categories side section: Manufacturing")]
        public void TCA09_LinksVerificationsForOtherJobCategoriesSideSection_Manufacturing()
        {
#line 110
this.TCA09_LinksVerificationsForOtherJobCategoriesSideSection("Manufacturing", "Delivery and storage", ((string[])(null)));
#line hidden
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="TCA09 - Links verifications for Other job categories side section: Retail and sal" +
            "es")]
        [Xunit.TraitAttribute("FeatureTitle", "ExploreCareersCUI")]
        [Xunit.TraitAttribute("Description", "TCA09 - Links verifications for Other job categories side section: Retail and sal" +
            "es")]
        public void TCA09_LinksVerificationsForOtherJobCategoriesSideSection_RetailAndSales()
        {
#line 110
this.TCA09_LinksVerificationsForOtherJobCategoriesSideSection("Retail and sales", "Creative and media", ((string[])(null)));
#line hidden
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="TCA09 - Links verifications for Other job categories side section: Science and re" +
            "search")]
        [Xunit.TraitAttribute("FeatureTitle", "ExploreCareersCUI")]
        [Xunit.TraitAttribute("Description", "TCA09 - Links verifications for Other job categories side section: Science and re" +
            "search")]
        public void TCA09_LinksVerificationsForOtherJobCategoriesSideSection_ScienceAndResearch()
        {
#line 110
this.TCA09_LinksVerificationsForOtherJobCategoriesSideSection("Science and research", "Construction and trades", ((string[])(null)));
#line hidden
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="TCA09 - Links verifications for Other job categories side section: Social care")]
        [Xunit.TraitAttribute("FeatureTitle", "ExploreCareersCUI")]
        [Xunit.TraitAttribute("Description", "TCA09 - Links verifications for Other job categories side section: Social care")]
        public void TCA09_LinksVerificationsForOtherJobCategoriesSideSection_SocialCare()
        {
#line 110
this.TCA09_LinksVerificationsForOtherJobCategoriesSideSection("Social care", "Computing, technology and digital", ((string[])(null)));
#line hidden
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="TCA09 - Links verifications for Other job categories side section: Sports and lei" +
            "sure")]
        [Xunit.TraitAttribute("FeatureTitle", "ExploreCareersCUI")]
        [Xunit.TraitAttribute("Description", "TCA09 - Links verifications for Other job categories side section: Sports and lei" +
            "sure")]
        public void TCA09_LinksVerificationsForOtherJobCategoriesSideSection_SportsAndLeisure()
        {
#line 110
this.TCA09_LinksVerificationsForOtherJobCategoriesSideSection("Sports and leisure", "Business and finance", ((string[])(null)));
#line hidden
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="TCA09 - Links verifications for Other job categories side section: Teaching and e" +
            "ducation")]
        [Xunit.TraitAttribute("FeatureTitle", "ExploreCareersCUI")]
        [Xunit.TraitAttribute("Description", "TCA09 - Links verifications for Other job categories side section: Teaching and e" +
            "ducation")]
        public void TCA09_LinksVerificationsForOtherJobCategoriesSideSection_TeachingAndEducation()
        {
#line 110
this.TCA09_LinksVerificationsForOtherJobCategoriesSideSection("Teaching and education", "Beauty and wellbeing", ((string[])(null)));
#line hidden
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="TCA09 - Links verifications for Other job categories side section: Transport")]
        [Xunit.TraitAttribute("FeatureTitle", "ExploreCareersCUI")]
        [Xunit.TraitAttribute("Description", "TCA09 - Links verifications for Other job categories side section: Transport")]
        public void TCA09_LinksVerificationsForOtherJobCategoriesSideSection_Transport()
        {
#line 110
this.TCA09_LinksVerificationsForOtherJobCategoriesSideSection("Transport", "Animal care", ((string[])(null)));
#line hidden
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="TCA09 - Links verifications for Other job categories side section: Travel and tou" +
            "rism")]
        [Xunit.TraitAttribute("FeatureTitle", "ExploreCareersCUI")]
        [Xunit.TraitAttribute("Description", "TCA09 - Links verifications for Other job categories side section: Travel and tou" +
            "rism")]
        public void TCA09_LinksVerificationsForOtherJobCategoriesSideSection_TravelAndTourism()
        {
#line 110
this.TCA09_LinksVerificationsForOtherJobCategoriesSideSection("Travel and tourism", "Administration", ((string[])(null)));
#line hidden
        }
        
        public virtual void TCA10_UnqualifiedLinkVerificationForOtherJobCategoriesSideSection(string jobCategory, string[] exampleTags)
        {
            string[] tagsOfScenario = exampleTags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("Job category", jobCategory);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("TCA10 - Unqualified link verification for Other job categories side section", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 142
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 143
 testRunner.Given(string.Format("I am at the \"Job categories\" web page for {0}", jobCategory), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 144
 testRunner.Then(string.Format("the {0} link is not present amongst the links beneath the Other job categories si" +
                            "de section", jobCategory), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="TCA10 - Unqualified link verification for Other job categories side section: Beau" +
            "ty and wellbeing")]
        [Xunit.TraitAttribute("FeatureTitle", "ExploreCareersCUI")]
        [Xunit.TraitAttribute("Description", "TCA10 - Unqualified link verification for Other job categories side section: Beau" +
            "ty and wellbeing")]
        public void TCA10_UnqualifiedLinkVerificationForOtherJobCategoriesSideSection_BeautyAndWellbeing()
        {
#line 142
this.TCA10_UnqualifiedLinkVerificationForOtherJobCategoriesSideSection("Beauty and wellbeing", ((string[])(null)));
#line hidden
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="TCA10 - Unqualified link verification for Other job categories side section: Cons" +
            "truction and trades")]
        [Xunit.TraitAttribute("FeatureTitle", "ExploreCareersCUI")]
        [Xunit.TraitAttribute("Description", "TCA10 - Unqualified link verification for Other job categories side section: Cons" +
            "truction and trades")]
        public void TCA10_UnqualifiedLinkVerificationForOtherJobCategoriesSideSection_ConstructionAndTrades()
        {
#line 142
this.TCA10_UnqualifiedLinkVerificationForOtherJobCategoriesSideSection("Construction and trades", ((string[])(null)));
#line hidden
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="TCA10 - Unqualified link verification for Other job categories side section: Crea" +
            "tive and media")]
        [Xunit.TraitAttribute("FeatureTitle", "ExploreCareersCUI")]
        [Xunit.TraitAttribute("Description", "TCA10 - Unqualified link verification for Other job categories side section: Crea" +
            "tive and media")]
        public void TCA10_UnqualifiedLinkVerificationForOtherJobCategoriesSideSection_CreativeAndMedia()
        {
#line 142
this.TCA10_UnqualifiedLinkVerificationForOtherJobCategoriesSideSection("Creative and media", ((string[])(null)));
#line hidden
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="TCA10 - Unqualified link verification for Other job categories side section: Deli" +
            "very and storage")]
        [Xunit.TraitAttribute("FeatureTitle", "ExploreCareersCUI")]
        [Xunit.TraitAttribute("Description", "TCA10 - Unqualified link verification for Other job categories side section: Deli" +
            "very and storage")]
        public void TCA10_UnqualifiedLinkVerificationForOtherJobCategoriesSideSection_DeliveryAndStorage()
        {
#line 142
this.TCA10_UnqualifiedLinkVerificationForOtherJobCategoriesSideSection("Delivery and storage", ((string[])(null)));
#line hidden
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="TCA10 - Unqualified link verification for Other job categories side section: Engi" +
            "neering and maintenance")]
        [Xunit.TraitAttribute("FeatureTitle", "ExploreCareersCUI")]
        [Xunit.TraitAttribute("Description", "TCA10 - Unqualified link verification for Other job categories side section: Engi" +
            "neering and maintenance")]
        public void TCA10_UnqualifiedLinkVerificationForOtherJobCategoriesSideSection_EngineeringAndMaintenance()
        {
#line 142
this.TCA10_UnqualifiedLinkVerificationForOtherJobCategoriesSideSection("Engineering and maintenance", ((string[])(null)));
#line hidden
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="TCA10 - Unqualified link verification for Other job categories side section: Envi" +
            "ronment and land")]
        [Xunit.TraitAttribute("FeatureTitle", "ExploreCareersCUI")]
        [Xunit.TraitAttribute("Description", "TCA10 - Unqualified link verification for Other job categories side section: Envi" +
            "ronment and land")]
        public void TCA10_UnqualifiedLinkVerificationForOtherJobCategoriesSideSection_EnvironmentAndLand()
        {
#line 142
this.TCA10_UnqualifiedLinkVerificationForOtherJobCategoriesSideSection("Environment and land", ((string[])(null)));
#line hidden
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="TCA10 - Unqualified link verification for Other job categories side section: Gove" +
            "rnment services")]
        [Xunit.TraitAttribute("FeatureTitle", "ExploreCareersCUI")]
        [Xunit.TraitAttribute("Description", "TCA10 - Unqualified link verification for Other job categories side section: Gove" +
            "rnment services")]
        public void TCA10_UnqualifiedLinkVerificationForOtherJobCategoriesSideSection_GovernmentServices()
        {
#line 142
this.TCA10_UnqualifiedLinkVerificationForOtherJobCategoriesSideSection("Government services", ((string[])(null)));
#line hidden
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="TCA10 - Unqualified link verification for Other job categories side section: Heal" +
            "thcare")]
        [Xunit.TraitAttribute("FeatureTitle", "ExploreCareersCUI")]
        [Xunit.TraitAttribute("Description", "TCA10 - Unqualified link verification for Other job categories side section: Heal" +
            "thcare")]
        public void TCA10_UnqualifiedLinkVerificationForOtherJobCategoriesSideSection_Healthcare()
        {
#line 142
this.TCA10_UnqualifiedLinkVerificationForOtherJobCategoriesSideSection("Healthcare", ((string[])(null)));
#line hidden
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="TCA11 - Verify Job category list")]
        [Xunit.TraitAttribute("FeatureTitle", "ExploreCareersCUI")]
        [Xunit.TraitAttribute("Description", "TCA11 - Verify Job category list")]
        public void TCA11_VerifyJobCategoryList()
        {
            string[] tagsOfScenario = ((string[])(null));
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("TCA11 - Verify Job category list", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 156
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 157
testRunner.Given("I am at the \"Explore careers\" page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
                TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                            "Job category"});
                table1.AddRow(new string[] {
                            "Administration"});
                table1.AddRow(new string[] {
                            "Animal care"});
                table1.AddRow(new string[] {
                            "Beauty and wellbeing"});
                table1.AddRow(new string[] {
                            "Business and finance"});
                table1.AddRow(new string[] {
                            "Computing, technology and digital"});
                table1.AddRow(new string[] {
                            "Construction and trades"});
                table1.AddRow(new string[] {
                            "Creative and media"});
                table1.AddRow(new string[] {
                            "Delivery and storage"});
                table1.AddRow(new string[] {
                            "Emergency and uniform services"});
                table1.AddRow(new string[] {
                            "Engineering and maintenance"});
                table1.AddRow(new string[] {
                            "Environment and land"});
                table1.AddRow(new string[] {
                            "Government services"});
                table1.AddRow(new string[] {
                            "Healthcare"});
                table1.AddRow(new string[] {
                            "Home services"});
                table1.AddRow(new string[] {
                            "Hospitality and food"});
                table1.AddRow(new string[] {
                            "Law and legal"});
                table1.AddRow(new string[] {
                            "Managerial"});
                table1.AddRow(new string[] {
                            "Manufacturing"});
                table1.AddRow(new string[] {
                            "Retail and sales"});
                table1.AddRow(new string[] {
                            "Science and research"});
                table1.AddRow(new string[] {
                            "Social care"});
                table1.AddRow(new string[] {
                            "Sports and leisure"});
                table1.AddRow(new string[] {
                            "Teaching and education"});
                table1.AddRow(new string[] {
                            "Transport"});
                table1.AddRow(new string[] {
                            "Travel and tourism"});
#line 158
testRunner.And("I check the list displayed below against the list of Job categories displayed on " +
                        "that page", ((string)(null)), table1, "And ");
#line hidden
#line 185
testRunner.Then("both lists are the same", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        public virtual void TCA12_VerifyJobProfilesDistinctCount(string jobCategory, string[] exampleTags)
        {
            string[] tagsOfScenario = exampleTags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("Job category", jobCategory);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("TCA12 - Verify Job profiles distinct count", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 187
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 188
 testRunner.Given(string.Format("I am at the \"Job categories\" web page for {0}", jobCategory), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 189
 testRunner.When("I check the job profiles list", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 190
 testRunner.Then("none of the job profiles occur more than once", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="TCA12 - Verify Job profiles distinct count: Administration")]
        [Xunit.TraitAttribute("FeatureTitle", "ExploreCareersCUI")]
        [Xunit.TraitAttribute("Description", "TCA12 - Verify Job profiles distinct count: Administration")]
        public void TCA12_VerifyJobProfilesDistinctCount_Administration()
        {
#line 187
this.TCA12_VerifyJobProfilesDistinctCount("Administration", ((string[])(null)));
#line hidden
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="TCA12 - Verify Job profiles distinct count: Animal care")]
        [Xunit.TraitAttribute("FeatureTitle", "ExploreCareersCUI")]
        [Xunit.TraitAttribute("Description", "TCA12 - Verify Job profiles distinct count: Animal care")]
        public void TCA12_VerifyJobProfilesDistinctCount_AnimalCare()
        {
#line 187
this.TCA12_VerifyJobProfilesDistinctCount("Animal care", ((string[])(null)));
#line hidden
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="TCA12 - Verify Job profiles distinct count: Beauty and wellbeing")]
        [Xunit.TraitAttribute("FeatureTitle", "ExploreCareersCUI")]
        [Xunit.TraitAttribute("Description", "TCA12 - Verify Job profiles distinct count: Beauty and wellbeing")]
        public void TCA12_VerifyJobProfilesDistinctCount_BeautyAndWellbeing()
        {
#line 187
this.TCA12_VerifyJobProfilesDistinctCount("Beauty and wellbeing", ((string[])(null)));
#line hidden
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="TCA12 - Verify Job profiles distinct count: Business and finance")]
        [Xunit.TraitAttribute("FeatureTitle", "ExploreCareersCUI")]
        [Xunit.TraitAttribute("Description", "TCA12 - Verify Job profiles distinct count: Business and finance")]
        public void TCA12_VerifyJobProfilesDistinctCount_BusinessAndFinance()
        {
#line 187
this.TCA12_VerifyJobProfilesDistinctCount("Business and finance", ((string[])(null)));
#line hidden
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="TCA12 - Verify Job profiles distinct count: Computing, technology and digital")]
        [Xunit.TraitAttribute("FeatureTitle", "ExploreCareersCUI")]
        [Xunit.TraitAttribute("Description", "TCA12 - Verify Job profiles distinct count: Computing, technology and digital")]
        public void TCA12_VerifyJobProfilesDistinctCount_ComputingTechnologyAndDigital()
        {
#line 187
this.TCA12_VerifyJobProfilesDistinctCount("Computing, technology and digital", ((string[])(null)));
#line hidden
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="TCA12 - Verify Job profiles distinct count: Construction and trades")]
        [Xunit.TraitAttribute("FeatureTitle", "ExploreCareersCUI")]
        [Xunit.TraitAttribute("Description", "TCA12 - Verify Job profiles distinct count: Construction and trades")]
        public void TCA12_VerifyJobProfilesDistinctCount_ConstructionAndTrades()
        {
#line 187
this.TCA12_VerifyJobProfilesDistinctCount("Construction and trades", ((string[])(null)));
#line hidden
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="TCA12 - Verify Job profiles distinct count: Creative and media")]
        [Xunit.TraitAttribute("FeatureTitle", "ExploreCareersCUI")]
        [Xunit.TraitAttribute("Description", "TCA12 - Verify Job profiles distinct count: Creative and media")]
        public void TCA12_VerifyJobProfilesDistinctCount_CreativeAndMedia()
        {
#line 187
this.TCA12_VerifyJobProfilesDistinctCount("Creative and media", ((string[])(null)));
#line hidden
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="TCA12 - Verify Job profiles distinct count: Delivery and storage")]
        [Xunit.TraitAttribute("FeatureTitle", "ExploreCareersCUI")]
        [Xunit.TraitAttribute("Description", "TCA12 - Verify Job profiles distinct count: Delivery and storage")]
        public void TCA12_VerifyJobProfilesDistinctCount_DeliveryAndStorage()
        {
#line 187
this.TCA12_VerifyJobProfilesDistinctCount("Delivery and storage", ((string[])(null)));
#line hidden
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="TCA12 - Verify Job profiles distinct count: Emergency and uniform services")]
        [Xunit.TraitAttribute("FeatureTitle", "ExploreCareersCUI")]
        [Xunit.TraitAttribute("Description", "TCA12 - Verify Job profiles distinct count: Emergency and uniform services")]
        public void TCA12_VerifyJobProfilesDistinctCount_EmergencyAndUniformServices()
        {
#line 187
this.TCA12_VerifyJobProfilesDistinctCount("Emergency and uniform services", ((string[])(null)));
#line hidden
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="TCA12 - Verify Job profiles distinct count: Engineering and maintenance")]
        [Xunit.TraitAttribute("FeatureTitle", "ExploreCareersCUI")]
        [Xunit.TraitAttribute("Description", "TCA12 - Verify Job profiles distinct count: Engineering and maintenance")]
        public void TCA12_VerifyJobProfilesDistinctCount_EngineeringAndMaintenance()
        {
#line 187
this.TCA12_VerifyJobProfilesDistinctCount("Engineering and maintenance", ((string[])(null)));
#line hidden
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="TCA12 - Verify Job profiles distinct count: Environment and land")]
        [Xunit.TraitAttribute("FeatureTitle", "ExploreCareersCUI")]
        [Xunit.TraitAttribute("Description", "TCA12 - Verify Job profiles distinct count: Environment and land")]
        public void TCA12_VerifyJobProfilesDistinctCount_EnvironmentAndLand()
        {
#line 187
this.TCA12_VerifyJobProfilesDistinctCount("Environment and land", ((string[])(null)));
#line hidden
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="TCA12 - Verify Job profiles distinct count: Government services")]
        [Xunit.TraitAttribute("FeatureTitle", "ExploreCareersCUI")]
        [Xunit.TraitAttribute("Description", "TCA12 - Verify Job profiles distinct count: Government services")]
        public void TCA12_VerifyJobProfilesDistinctCount_GovernmentServices()
        {
#line 187
this.TCA12_VerifyJobProfilesDistinctCount("Government services", ((string[])(null)));
#line hidden
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="TCA12 - Verify Job profiles distinct count: Healthcare")]
        [Xunit.TraitAttribute("FeatureTitle", "ExploreCareersCUI")]
        [Xunit.TraitAttribute("Description", "TCA12 - Verify Job profiles distinct count: Healthcare")]
        public void TCA12_VerifyJobProfilesDistinctCount_Healthcare()
        {
#line 187
this.TCA12_VerifyJobProfilesDistinctCount("Healthcare", ((string[])(null)));
#line hidden
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="TCA12 - Verify Job profiles distinct count: Home services")]
        [Xunit.TraitAttribute("FeatureTitle", "ExploreCareersCUI")]
        [Xunit.TraitAttribute("Description", "TCA12 - Verify Job profiles distinct count: Home services")]
        public void TCA12_VerifyJobProfilesDistinctCount_HomeServices()
        {
#line 187
this.TCA12_VerifyJobProfilesDistinctCount("Home services", ((string[])(null)));
#line hidden
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="TCA12 - Verify Job profiles distinct count: Hospitality and food")]
        [Xunit.TraitAttribute("FeatureTitle", "ExploreCareersCUI")]
        [Xunit.TraitAttribute("Description", "TCA12 - Verify Job profiles distinct count: Hospitality and food")]
        public void TCA12_VerifyJobProfilesDistinctCount_HospitalityAndFood()
        {
#line 187
this.TCA12_VerifyJobProfilesDistinctCount("Hospitality and food", ((string[])(null)));
#line hidden
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="TCA12 - Verify Job profiles distinct count: Law and legal")]
        [Xunit.TraitAttribute("FeatureTitle", "ExploreCareersCUI")]
        [Xunit.TraitAttribute("Description", "TCA12 - Verify Job profiles distinct count: Law and legal")]
        public void TCA12_VerifyJobProfilesDistinctCount_LawAndLegal()
        {
#line 187
this.TCA12_VerifyJobProfilesDistinctCount("Law and legal", ((string[])(null)));
#line hidden
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="TCA12 - Verify Job profiles distinct count: Managerial")]
        [Xunit.TraitAttribute("FeatureTitle", "ExploreCareersCUI")]
        [Xunit.TraitAttribute("Description", "TCA12 - Verify Job profiles distinct count: Managerial")]
        public void TCA12_VerifyJobProfilesDistinctCount_Managerial()
        {
#line 187
this.TCA12_VerifyJobProfilesDistinctCount("Managerial", ((string[])(null)));
#line hidden
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="TCA12 - Verify Job profiles distinct count: Manufacturing")]
        [Xunit.TraitAttribute("FeatureTitle", "ExploreCareersCUI")]
        [Xunit.TraitAttribute("Description", "TCA12 - Verify Job profiles distinct count: Manufacturing")]
        public void TCA12_VerifyJobProfilesDistinctCount_Manufacturing()
        {
#line 187
this.TCA12_VerifyJobProfilesDistinctCount("Manufacturing", ((string[])(null)));
#line hidden
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="TCA12 - Verify Job profiles distinct count: Retail and sales")]
        [Xunit.TraitAttribute("FeatureTitle", "ExploreCareersCUI")]
        [Xunit.TraitAttribute("Description", "TCA12 - Verify Job profiles distinct count: Retail and sales")]
        public void TCA12_VerifyJobProfilesDistinctCount_RetailAndSales()
        {
#line 187
this.TCA12_VerifyJobProfilesDistinctCount("Retail and sales", ((string[])(null)));
#line hidden
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="TCA12 - Verify Job profiles distinct count: Science and research")]
        [Xunit.TraitAttribute("FeatureTitle", "ExploreCareersCUI")]
        [Xunit.TraitAttribute("Description", "TCA12 - Verify Job profiles distinct count: Science and research")]
        public void TCA12_VerifyJobProfilesDistinctCount_ScienceAndResearch()
        {
#line 187
this.TCA12_VerifyJobProfilesDistinctCount("Science and research", ((string[])(null)));
#line hidden
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="TCA12 - Verify Job profiles distinct count: Social care")]
        [Xunit.TraitAttribute("FeatureTitle", "ExploreCareersCUI")]
        [Xunit.TraitAttribute("Description", "TCA12 - Verify Job profiles distinct count: Social care")]
        public void TCA12_VerifyJobProfilesDistinctCount_SocialCare()
        {
#line 187
this.TCA12_VerifyJobProfilesDistinctCount("Social care", ((string[])(null)));
#line hidden
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="TCA12 - Verify Job profiles distinct count: Sports and leisure")]
        [Xunit.TraitAttribute("FeatureTitle", "ExploreCareersCUI")]
        [Xunit.TraitAttribute("Description", "TCA12 - Verify Job profiles distinct count: Sports and leisure")]
        public void TCA12_VerifyJobProfilesDistinctCount_SportsAndLeisure()
        {
#line 187
this.TCA12_VerifyJobProfilesDistinctCount("Sports and leisure", ((string[])(null)));
#line hidden
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="TCA12 - Verify Job profiles distinct count: Teaching and education")]
        [Xunit.TraitAttribute("FeatureTitle", "ExploreCareersCUI")]
        [Xunit.TraitAttribute("Description", "TCA12 - Verify Job profiles distinct count: Teaching and education")]
        public void TCA12_VerifyJobProfilesDistinctCount_TeachingAndEducation()
        {
#line 187
this.TCA12_VerifyJobProfilesDistinctCount("Teaching and education", ((string[])(null)));
#line hidden
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="TCA12 - Verify Job profiles distinct count: Transport")]
        [Xunit.TraitAttribute("FeatureTitle", "ExploreCareersCUI")]
        [Xunit.TraitAttribute("Description", "TCA12 - Verify Job profiles distinct count: Transport")]
        public void TCA12_VerifyJobProfilesDistinctCount_Transport()
        {
#line 187
this.TCA12_VerifyJobProfilesDistinctCount("Transport", ((string[])(null)));
#line hidden
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="TCA12 - Verify Job profiles distinct count: Travel and tourism")]
        [Xunit.TraitAttribute("FeatureTitle", "ExploreCareersCUI")]
        [Xunit.TraitAttribute("Description", "TCA12 - Verify Job profiles distinct count: Travel and tourism")]
        public void TCA12_VerifyJobProfilesDistinctCount_TravelAndTourism()
        {
#line 187
this.TCA12_VerifyJobProfilesDistinctCount("Travel and tourism", ((string[])(null)));
#line hidden
        }
        
        public virtual void TCA13_JobProfilesLinksVerification(string jobCategory, string linkPosition, string[] exampleTags)
        {
            string[] tagsOfScenario = exampleTags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("Job category", jobCategory);
            argumentsOfScenario.Add("Link position", linkPosition);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("TCA13 - Job profiles links verification", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 219
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 220
 testRunner.Given(string.Format("I am at the \"Job categories\" web page for {0}", jobCategory), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 221
 testRunner.When(string.Format("I click the link for the {0} Job profile under that Job category", linkPosition), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 222
 testRunner.Then("I am taken profile details page for that Job profile", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="TCA13 - Job profiles links verification: Administration")]
        [Xunit.TraitAttribute("FeatureTitle", "ExploreCareersCUI")]
        [Xunit.TraitAttribute("Description", "TCA13 - Job profiles links verification: Administration")]
        public void TCA13_JobProfilesLinksVerification_Administration()
        {
#line 219
this.TCA13_JobProfilesLinksVerification("Administration", "first", ((string[])(null)));
#line hidden
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="TCA13 - Job profiles links verification: Animal care")]
        [Xunit.TraitAttribute("FeatureTitle", "ExploreCareersCUI")]
        [Xunit.TraitAttribute("Description", "TCA13 - Job profiles links verification: Animal care")]
        public void TCA13_JobProfilesLinksVerification_AnimalCare()
        {
#line 219
this.TCA13_JobProfilesLinksVerification("Animal care", "second", ((string[])(null)));
#line hidden
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="TCA13 - Job profiles links verification: Beauty and wellbeing")]
        [Xunit.TraitAttribute("FeatureTitle", "ExploreCareersCUI")]
        [Xunit.TraitAttribute("Description", "TCA13 - Job profiles links verification: Beauty and wellbeing")]
        public void TCA13_JobProfilesLinksVerification_BeautyAndWellbeing()
        {
#line 219
this.TCA13_JobProfilesLinksVerification("Beauty and wellbeing", "third", ((string[])(null)));
#line hidden
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="TCA13 - Job profiles links verification: Business and finance")]
        [Xunit.TraitAttribute("FeatureTitle", "ExploreCareersCUI")]
        [Xunit.TraitAttribute("Description", "TCA13 - Job profiles links verification: Business and finance")]
        public void TCA13_JobProfilesLinksVerification_BusinessAndFinance()
        {
#line 219
this.TCA13_JobProfilesLinksVerification("Business and finance", "fourth", ((string[])(null)));
#line hidden
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="TCA13 - Job profiles links verification: Computing, technology and digital")]
        [Xunit.TraitAttribute("FeatureTitle", "ExploreCareersCUI")]
        [Xunit.TraitAttribute("Description", "TCA13 - Job profiles links verification: Computing, technology and digital")]
        public void TCA13_JobProfilesLinksVerification_ComputingTechnologyAndDigital()
        {
#line 219
this.TCA13_JobProfilesLinksVerification("Computing, technology and digital", "fifth", ((string[])(null)));
#line hidden
        }
        
        public virtual void TCA14_AlphabeticalOrdering(string page, string jobCategory, string listToExamine, string[] exampleTags)
        {
            string[] tagsOfScenario = exampleTags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("Page", page);
            argumentsOfScenario.Add("Job category", jobCategory);
            argumentsOfScenario.Add("List to examine", listToExamine);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("TCA14 - Alphabetical ordering", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 231
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 232
 testRunner.Given(string.Format("I navigate to the {0} page for {1}", page, jobCategory), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 233
 testRunner.When(string.Format("I examine the {0} list", listToExamine), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 234
 testRunner.Then("the list is in alphabetical order", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="TCA14 - Alphabetical ordering: Variant 0")]
        [Xunit.TraitAttribute("FeatureTitle", "ExploreCareersCUI")]
        [Xunit.TraitAttribute("Description", "TCA14 - Alphabetical ordering: Variant 0")]
        public void TCA14_AlphabeticalOrdering_Variant0()
        {
#line 231
this.TCA14_AlphabeticalOrdering("Explore careers", "", "Job categories", ((string[])(null)));
#line hidden
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="TCA14 - Alphabetical ordering: Variant 1")]
        [Xunit.TraitAttribute("FeatureTitle", "ExploreCareersCUI")]
        [Xunit.TraitAttribute("Description", "TCA14 - Alphabetical ordering: Variant 1")]
        public void TCA14_AlphabeticalOrdering_Variant1()
        {
#line 231
this.TCA14_AlphabeticalOrdering("Job categories", "Administration", "Other job categories", ((string[])(null)));
#line hidden
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="TCA14 - Alphabetical ordering: Variant 2")]
        [Xunit.TraitAttribute("FeatureTitle", "ExploreCareersCUI")]
        [Xunit.TraitAttribute("Description", "TCA14 - Alphabetical ordering: Variant 2")]
        public void TCA14_AlphabeticalOrdering_Variant2()
        {
#line 231
this.TCA14_AlphabeticalOrdering("Job categories", "Administration", "Job profiles", ((string[])(null)));
#line hidden
        }
        
        public virtual void TCA15_NonPaginationVerificationForJobCategoriesAdministrationPage(string page, string jobCategory, string[] exampleTags)
        {
            string[] tagsOfScenario = exampleTags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("Page", page);
            argumentsOfScenario.Add("Job category", jobCategory);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("TCA15 - Non pagination verification for Job categories Administration page", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 241
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 242
 testRunner.Given(string.Format("I navigate to the {0} page for {1}", page, jobCategory), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 243
 testRunner.When("I examine the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 244
 testRunner.Then("the page contains no pagination", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="TCA15 - Non pagination verification for Job categories Administration page: Varia" +
            "nt 0")]
        [Xunit.TraitAttribute("FeatureTitle", "ExploreCareersCUI")]
        [Xunit.TraitAttribute("Description", "TCA15 - Non pagination verification for Job categories Administration page: Varia" +
            "nt 0")]
        public void TCA15_NonPaginationVerificationForJobCategoriesAdministrationPage_Variant0()
        {
#line 241
this.TCA15_NonPaginationVerificationForJobCategoriesAdministrationPage("Job categories", "Administration", ((string[])(null)));
#line hidden
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="TCA15 - Non pagination verification for Job categories Administration page: Varia" +
            "nt 1")]
        [Xunit.TraitAttribute("FeatureTitle", "ExploreCareersCUI")]
        [Xunit.TraitAttribute("Description", "TCA15 - Non pagination verification for Job categories Administration page: Varia" +
            "nt 1")]
        public void TCA15_NonPaginationVerificationForJobCategoriesAdministrationPage_Variant1()
        {
#line 241
this.TCA15_NonPaginationVerificationForJobCategoriesAdministrationPage("Job categories", "Transport", ((string[])(null)));
#line hidden
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="TCA16 - Placeholder text verification for search field")]
        [Xunit.TraitAttribute("FeatureTitle", "ExploreCareersCUI")]
        [Xunit.TraitAttribute("Description", "TCA16 - Placeholder text verification for search field")]
        public void TCA16_PlaceholderTextVerificationForSearchField()
        {
            string[] tagsOfScenario = ((string[])(null));
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("TCA16 - Placeholder text verification for search field", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 250
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 251
 testRunner.Given("I navigate to the web page \"Search results\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 252
 testRunner.Then("the search results field placeholder text is \"Enter a job title\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        public virtual void TCA17_NumberOfResultsFoundVerification(string page, string searchTerm, string[] exampleTags)
        {
            string[] tagsOfScenario = exampleTags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("page", page);
            argumentsOfScenario.Add("search term", searchTerm);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("TCA17 - Number of results found verification", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 254
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 255
 testRunner.Given(string.Format("I navigate to the {0} page", page), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 256
 testRunner.And(string.Format("I enter the search term {0} in the search field", searchTerm), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 257
 testRunner.When("I click the search button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 258
 testRunner.Then("the number of results stated as found is the equal to the actual number of Job pr" +
                        "ofiles listed thereunder", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="TCA17 - Number of results found verification: Variant 0")]
        [Xunit.TraitAttribute("FeatureTitle", "ExploreCareersCUI")]
        [Xunit.TraitAttribute("Description", "TCA17 - Number of results found verification: Variant 0")]
        public void TCA17_NumberOfResultsFoundVerification_Variant0()
        {
#line 254
this.TCA17_NumberOfResultsFoundVerification("Explore careers", "Aircraft pilot", ((string[])(null)));
#line hidden
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="TCA17 - Number of results found verification: Variant 1")]
        [Xunit.TraitAttribute("FeatureTitle", "ExploreCareersCUI")]
        [Xunit.TraitAttribute("Description", "TCA17 - Number of results found verification: Variant 1")]
        public void TCA17_NumberOfResultsFoundVerification_Variant1()
        {
#line 254
this.TCA17_NumberOfResultsFoundVerification("Search results", "Nurse", ((string[])(null)));
#line hidden
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="TCA17 - Number of results found verification: Variant 2")]
        [Xunit.TraitAttribute("FeatureTitle", "ExploreCareersCUI")]
        [Xunit.TraitAttribute("Description", "TCA17 - Number of results found verification: Variant 2")]
        public void TCA17_NumberOfResultsFoundVerification_Variant2()
        {
#line 254
this.TCA17_NumberOfResultsFoundVerification("Explore careers", "Carpenter", ((string[])(null)));
#line hidden
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="TCA17 - Number of results found verification: Variant 3")]
        [Xunit.TraitAttribute("FeatureTitle", "ExploreCareersCUI")]
        [Xunit.TraitAttribute("Description", "TCA17 - Number of results found verification: Variant 3")]
        public void TCA17_NumberOfResultsFoundVerification_Variant3()
        {
#line 254
this.TCA17_NumberOfResultsFoundVerification("Search results", "Cartographer", ((string[])(null)));
#line hidden
        }
        
        public virtual void TCA18_BreadcrumbLinkingVerification(string page, string jobCategory, string[] exampleTags)
        {
            string[] tagsOfScenario = exampleTags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("Page", page);
            argumentsOfScenario.Add("Job category", jobCategory);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("TCA18 - Breadcrumb linking verification", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 266
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 267
 testRunner.Given(string.Format("I navigate to the {0} page for {1}", page, jobCategory), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 268
 testRunner.When("I click the Explore careers breadcrumb", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 269
 testRunner.Then("I am on the \"Explore careers\" page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="TCA18 - Breadcrumb linking verification: Job categories")]
        [Xunit.TraitAttribute("FeatureTitle", "ExploreCareersCUI")]
        [Xunit.TraitAttribute("Description", "TCA18 - Breadcrumb linking verification: Job categories")]
        public void TCA18_BreadcrumbLinkingVerification_JobCategories()
        {
#line 266
this.TCA18_BreadcrumbLinkingVerification("Job categories", "Administration", ((string[])(null)));
#line hidden
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="TCA18 - Breadcrumb linking verification: Search results")]
        [Xunit.TraitAttribute("FeatureTitle", "ExploreCareersCUI")]
        [Xunit.TraitAttribute("Description", "TCA18 - Breadcrumb linking verification: Search results")]
        public void TCA18_BreadcrumbLinkingVerification_SearchResults()
        {
#line 266
this.TCA18_BreadcrumbLinkingVerification("Search results", "", ((string[])(null)));
#line hidden
        }
        
        public virtual void TCA19_JobCategoryPageShowsCorrectBreadcrumb(string jobCategory, string breadcrumb, string[] exampleTags)
        {
            string[] tagsOfScenario = exampleTags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("Job category", jobCategory);
            argumentsOfScenario.Add("Breadcrumb", breadcrumb);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("TCA19 - Job category page shows correct breadcrumb", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 275
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 276
 testRunner.Given("I am at the \"Explore careers\" page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 277
 testRunner.When(string.Format("I click on the {0} link", jobCategory), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 278
 testRunner.Then(string.Format("the page displayed as a result bears the breadcrumb {0}", breadcrumb), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="TCA19 - Job category page shows correct breadcrumb: Administration")]
        [Xunit.TraitAttribute("FeatureTitle", "ExploreCareersCUI")]
        [Xunit.TraitAttribute("Description", "TCA19 - Job category page shows correct breadcrumb: Administration")]
        public void TCA19_JobCategoryPageShowsCorrectBreadcrumb_Administration()
        {
#line 275
this.TCA19_JobCategoryPageShowsCorrectBreadcrumb("Administration", "Home > Explore Careers > Administration", ((string[])(null)));
#line hidden
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="TCA19 - Job category page shows correct breadcrumb: Animal care")]
        [Xunit.TraitAttribute("FeatureTitle", "ExploreCareersCUI")]
        [Xunit.TraitAttribute("Description", "TCA19 - Job category page shows correct breadcrumb: Animal care")]
        public void TCA19_JobCategoryPageShowsCorrectBreadcrumb_AnimalCare()
        {
#line 275
this.TCA19_JobCategoryPageShowsCorrectBreadcrumb("Animal care", "Home > Explore Careers > Animal care", ((string[])(null)));
#line hidden
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="TCA19 - Job category page shows correct breadcrumb: Beauty and wellbeing")]
        [Xunit.TraitAttribute("FeatureTitle", "ExploreCareersCUI")]
        [Xunit.TraitAttribute("Description", "TCA19 - Job category page shows correct breadcrumb: Beauty and wellbeing")]
        public void TCA19_JobCategoryPageShowsCorrectBreadcrumb_BeautyAndWellbeing()
        {
#line 275
this.TCA19_JobCategoryPageShowsCorrectBreadcrumb("Beauty and wellbeing", "Home > Explore Careers > Beauty and wellbeing", ((string[])(null)));
#line hidden
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="TCA19 - Job category page shows correct breadcrumb: Business and finance")]
        [Xunit.TraitAttribute("FeatureTitle", "ExploreCareersCUI")]
        [Xunit.TraitAttribute("Description", "TCA19 - Job category page shows correct breadcrumb: Business and finance")]
        public void TCA19_JobCategoryPageShowsCorrectBreadcrumb_BusinessAndFinance()
        {
#line 275
this.TCA19_JobCategoryPageShowsCorrectBreadcrumb("Business and finance", "Home > Explore Careers > Business and finance", ((string[])(null)));
#line hidden
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="TCA19 - Job category page shows correct breadcrumb: Computing, technology and dig" +
            "ital")]
        [Xunit.TraitAttribute("FeatureTitle", "ExploreCareersCUI")]
        [Xunit.TraitAttribute("Description", "TCA19 - Job category page shows correct breadcrumb: Computing, technology and dig" +
            "ital")]
        public void TCA19_JobCategoryPageShowsCorrectBreadcrumb_ComputingTechnologyAndDigital()
        {
#line 275
this.TCA19_JobCategoryPageShowsCorrectBreadcrumb("Computing, technology and digital", "Home > Explore Careers > Computing, technology and digital", ((string[])(null)));
#line hidden
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="TCA19 - Job category page shows correct breadcrumb: Construction and trades")]
        [Xunit.TraitAttribute("FeatureTitle", "ExploreCareersCUI")]
        [Xunit.TraitAttribute("Description", "TCA19 - Job category page shows correct breadcrumb: Construction and trades")]
        public void TCA19_JobCategoryPageShowsCorrectBreadcrumb_ConstructionAndTrades()
        {
#line 275
this.TCA19_JobCategoryPageShowsCorrectBreadcrumb("Construction and trades", "Home > Explore Careers > Construction and trades", ((string[])(null)));
#line hidden
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="TCA19 - Job category page shows correct breadcrumb: Creative and media")]
        [Xunit.TraitAttribute("FeatureTitle", "ExploreCareersCUI")]
        [Xunit.TraitAttribute("Description", "TCA19 - Job category page shows correct breadcrumb: Creative and media")]
        public void TCA19_JobCategoryPageShowsCorrectBreadcrumb_CreativeAndMedia()
        {
#line 275
this.TCA19_JobCategoryPageShowsCorrectBreadcrumb("Creative and media", "Home > Explore Careers > Creative and media", ((string[])(null)));
#line hidden
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="TCA19 - Job category page shows correct breadcrumb: Delivery and storage")]
        [Xunit.TraitAttribute("FeatureTitle", "ExploreCareersCUI")]
        [Xunit.TraitAttribute("Description", "TCA19 - Job category page shows correct breadcrumb: Delivery and storage")]
        public void TCA19_JobCategoryPageShowsCorrectBreadcrumb_DeliveryAndStorage()
        {
#line 275
this.TCA19_JobCategoryPageShowsCorrectBreadcrumb("Delivery and storage", "Home > Explore Careers > Delivery and storage", ((string[])(null)));
#line hidden
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="TCA19 - Job category page shows correct breadcrumb: Emergency and uniform service" +
            "s")]
        [Xunit.TraitAttribute("FeatureTitle", "ExploreCareersCUI")]
        [Xunit.TraitAttribute("Description", "TCA19 - Job category page shows correct breadcrumb: Emergency and uniform service" +
            "s")]
        public void TCA19_JobCategoryPageShowsCorrectBreadcrumb_EmergencyAndUniformServices()
        {
#line 275
this.TCA19_JobCategoryPageShowsCorrectBreadcrumb("Emergency and uniform services", "Home > Explore Careers > Emergency and uniform services", ((string[])(null)));
#line hidden
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="TCA19 - Job category page shows correct breadcrumb: Engineering and maintenance")]
        [Xunit.TraitAttribute("FeatureTitle", "ExploreCareersCUI")]
        [Xunit.TraitAttribute("Description", "TCA19 - Job category page shows correct breadcrumb: Engineering and maintenance")]
        public void TCA19_JobCategoryPageShowsCorrectBreadcrumb_EngineeringAndMaintenance()
        {
#line 275
this.TCA19_JobCategoryPageShowsCorrectBreadcrumb("Engineering and maintenance", "Home > Explore Careers > Engineering and maintenance", ((string[])(null)));
#line hidden
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="TCA19 - Job category page shows correct breadcrumb: Environment and land")]
        [Xunit.TraitAttribute("FeatureTitle", "ExploreCareersCUI")]
        [Xunit.TraitAttribute("Description", "TCA19 - Job category page shows correct breadcrumb: Environment and land")]
        public void TCA19_JobCategoryPageShowsCorrectBreadcrumb_EnvironmentAndLand()
        {
#line 275
this.TCA19_JobCategoryPageShowsCorrectBreadcrumb("Environment and land", "Home > Explore Careers > Environment and land", ((string[])(null)));
#line hidden
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="TCA19 - Job category page shows correct breadcrumb: Government services")]
        [Xunit.TraitAttribute("FeatureTitle", "ExploreCareersCUI")]
        [Xunit.TraitAttribute("Description", "TCA19 - Job category page shows correct breadcrumb: Government services")]
        public void TCA19_JobCategoryPageShowsCorrectBreadcrumb_GovernmentServices()
        {
#line 275
this.TCA19_JobCategoryPageShowsCorrectBreadcrumb("Government services", "Home > Explore Careers > Government services", ((string[])(null)));
#line hidden
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="TCA19 - Job category page shows correct breadcrumb: Healthcare")]
        [Xunit.TraitAttribute("FeatureTitle", "ExploreCareersCUI")]
        [Xunit.TraitAttribute("Description", "TCA19 - Job category page shows correct breadcrumb: Healthcare")]
        public void TCA19_JobCategoryPageShowsCorrectBreadcrumb_Healthcare()
        {
#line 275
this.TCA19_JobCategoryPageShowsCorrectBreadcrumb("Healthcare", "Home > Explore Careers > Healthcare", ((string[])(null)));
#line hidden
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="TCA19 - Job category page shows correct breadcrumb: Home services")]
        [Xunit.TraitAttribute("FeatureTitle", "ExploreCareersCUI")]
        [Xunit.TraitAttribute("Description", "TCA19 - Job category page shows correct breadcrumb: Home services")]
        public void TCA19_JobCategoryPageShowsCorrectBreadcrumb_HomeServices()
        {
#line 275
this.TCA19_JobCategoryPageShowsCorrectBreadcrumb("Home services", "Home > Explore Careers > Home services", ((string[])(null)));
#line hidden
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="TCA19 - Job category page shows correct breadcrumb: Hospitality and food")]
        [Xunit.TraitAttribute("FeatureTitle", "ExploreCareersCUI")]
        [Xunit.TraitAttribute("Description", "TCA19 - Job category page shows correct breadcrumb: Hospitality and food")]
        public void TCA19_JobCategoryPageShowsCorrectBreadcrumb_HospitalityAndFood()
        {
#line 275
this.TCA19_JobCategoryPageShowsCorrectBreadcrumb("Hospitality and food", "Home > Explore Careers > Hospitality and food", ((string[])(null)));
#line hidden
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="TCA19 - Job category page shows correct breadcrumb: Law and legal")]
        [Xunit.TraitAttribute("FeatureTitle", "ExploreCareersCUI")]
        [Xunit.TraitAttribute("Description", "TCA19 - Job category page shows correct breadcrumb: Law and legal")]
        public void TCA19_JobCategoryPageShowsCorrectBreadcrumb_LawAndLegal()
        {
#line 275
this.TCA19_JobCategoryPageShowsCorrectBreadcrumb("Law and legal", "Home > Explore Careers > Law and legal", ((string[])(null)));
#line hidden
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="TCA19 - Job category page shows correct breadcrumb: Managerial")]
        [Xunit.TraitAttribute("FeatureTitle", "ExploreCareersCUI")]
        [Xunit.TraitAttribute("Description", "TCA19 - Job category page shows correct breadcrumb: Managerial")]
        public void TCA19_JobCategoryPageShowsCorrectBreadcrumb_Managerial()
        {
#line 275
this.TCA19_JobCategoryPageShowsCorrectBreadcrumb("Managerial", "Home > Explore Careers > Managerial", ((string[])(null)));
#line hidden
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="TCA19 - Job category page shows correct breadcrumb: Manufacturing")]
        [Xunit.TraitAttribute("FeatureTitle", "ExploreCareersCUI")]
        [Xunit.TraitAttribute("Description", "TCA19 - Job category page shows correct breadcrumb: Manufacturing")]
        public void TCA19_JobCategoryPageShowsCorrectBreadcrumb_Manufacturing()
        {
#line 275
this.TCA19_JobCategoryPageShowsCorrectBreadcrumb("Manufacturing", "Home > Explore Careers > Manufacturing", ((string[])(null)));
#line hidden
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="TCA19 - Job category page shows correct breadcrumb: Retail and sales")]
        [Xunit.TraitAttribute("FeatureTitle", "ExploreCareersCUI")]
        [Xunit.TraitAttribute("Description", "TCA19 - Job category page shows correct breadcrumb: Retail and sales")]
        public void TCA19_JobCategoryPageShowsCorrectBreadcrumb_RetailAndSales()
        {
#line 275
this.TCA19_JobCategoryPageShowsCorrectBreadcrumb("Retail and sales", "Home > Explore Careers > Retail and sales", ((string[])(null)));
#line hidden
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="TCA19 - Job category page shows correct breadcrumb: Science and research")]
        [Xunit.TraitAttribute("FeatureTitle", "ExploreCareersCUI")]
        [Xunit.TraitAttribute("Description", "TCA19 - Job category page shows correct breadcrumb: Science and research")]
        public void TCA19_JobCategoryPageShowsCorrectBreadcrumb_ScienceAndResearch()
        {
#line 275
this.TCA19_JobCategoryPageShowsCorrectBreadcrumb("Science and research", "Home > Explore Careers > Science and research", ((string[])(null)));
#line hidden
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="TCA19 - Job category page shows correct breadcrumb: Social care")]
        [Xunit.TraitAttribute("FeatureTitle", "ExploreCareersCUI")]
        [Xunit.TraitAttribute("Description", "TCA19 - Job category page shows correct breadcrumb: Social care")]
        public void TCA19_JobCategoryPageShowsCorrectBreadcrumb_SocialCare()
        {
#line 275
this.TCA19_JobCategoryPageShowsCorrectBreadcrumb("Social care", "Home > Explore Careers > Social care", ((string[])(null)));
#line hidden
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="TCA19 - Job category page shows correct breadcrumb: Sports and leisure")]
        [Xunit.TraitAttribute("FeatureTitle", "ExploreCareersCUI")]
        [Xunit.TraitAttribute("Description", "TCA19 - Job category page shows correct breadcrumb: Sports and leisure")]
        public void TCA19_JobCategoryPageShowsCorrectBreadcrumb_SportsAndLeisure()
        {
#line 275
this.TCA19_JobCategoryPageShowsCorrectBreadcrumb("Sports and leisure", "Home > Explore Careers > Sports and leisure", ((string[])(null)));
#line hidden
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="TCA19 - Job category page shows correct breadcrumb: Teaching and education")]
        [Xunit.TraitAttribute("FeatureTitle", "ExploreCareersCUI")]
        [Xunit.TraitAttribute("Description", "TCA19 - Job category page shows correct breadcrumb: Teaching and education")]
        public void TCA19_JobCategoryPageShowsCorrectBreadcrumb_TeachingAndEducation()
        {
#line 275
this.TCA19_JobCategoryPageShowsCorrectBreadcrumb("Teaching and education", "Home > Explore Careers > Teaching and education", ((string[])(null)));
#line hidden
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="TCA19 - Job category page shows correct breadcrumb: Transport")]
        [Xunit.TraitAttribute("FeatureTitle", "ExploreCareersCUI")]
        [Xunit.TraitAttribute("Description", "TCA19 - Job category page shows correct breadcrumb: Transport")]
        public void TCA19_JobCategoryPageShowsCorrectBreadcrumb_Transport()
        {
#line 275
this.TCA19_JobCategoryPageShowsCorrectBreadcrumb("Transport", "Home > Explore Careers > Transport", ((string[])(null)));
#line hidden
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="TCA19 - Job category page shows correct breadcrumb: Travel and tourism")]
        [Xunit.TraitAttribute("FeatureTitle", "ExploreCareersCUI")]
        [Xunit.TraitAttribute("Description", "TCA19 - Job category page shows correct breadcrumb: Travel and tourism")]
        public void TCA19_JobCategoryPageShowsCorrectBreadcrumb_TravelAndTourism()
        {
#line 275
this.TCA19_JobCategoryPageShowsCorrectBreadcrumb("Travel and tourism", "Home > Explore Careers > Travel and tourism", ((string[])(null)));
#line hidden
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.9.0.0")]
        [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        public class FixtureData : System.IDisposable
        {
            
            public FixtureData()
            {
                ExploreCareersCUIFeature.FeatureSetup();
            }
            
            void System.IDisposable.Dispose()
            {
                ExploreCareersCUIFeature.FeatureTearDown();
            }
        }
    }
}
#pragma warning restore
#endregion
