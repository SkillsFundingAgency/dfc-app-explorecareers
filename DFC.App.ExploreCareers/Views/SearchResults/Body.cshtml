@using Microsoft.Extensions.Configuration
@model DFC.App.ExploreCareers.ViewModels.SearchResults.BodyViewModel
@inject IConfiguration Configuration

      
  
  
   
<div class="govuk-width-container">
  <form  action="/search-results" method="get" id="header-search" class="ncs-search ncs-search__bar js-live-search-form">
    <h1 class="search-title govuk-heading-m govuk-!-margin-bottom-6">
        Search results for <span class="visuallyhidden">@Model.SearchTerm</span>
    </h1>
    <div class="search-wrapper">
      <div class="govuk-width-container"> 
        <div class="govuk-grid-row">         
          <div class="govuk-grid-column-two-thirds"> 
            <div class="govuk-form-group">                
                <label class="ncs-label govuk-label" for="searchTerm">Search job titles</label>

                <div class="input-wrapper">
                    <input placeholder="Enter a job title" class="govuk-input search-input js-search-focus focus js-autocomplete ui-autocomplete-input" aria-label="Search job titles" data-autocomplete-maxlength="7" data-autocomplete-minlength="2" data-autocomplete-source="/searchautocomplete" id="search-main" name="SearchTerm" type="search" value="@Model.SearchTerm" autocomplete="off">
                    <ul id="ui-id-1" tabindex="0" class="ui-menu ui-widget ui-widget-content ui-autocomplete ui-front" style="display: none;"></ul>
                
                    <div class="input-search-item input-submit-wrapper"> 
                        <button id="search-button" class="input-search-submit button" type="submit" class="button">Search</button>
                    </div>
                </div>
            </div>
            
            <div class="search-dym">
                @if (!string.IsNullOrEmpty(Model.DidYouMeanUrl))
                {
                    <span>
                        Did you mean <a href="@Model.DidYouMeanUrl"> @Model.DidYouMeanTerm </a>
                    </span>
                }
            </div>
          </div>
        </div>
      </div>
    </div>
  </form>
    <div id="results">
        <div class="results-block">
            <div class="inner-block">
                <p id="result-count" class="result-count">
                    @Model.TotalResultsMessage
                </p>
                @if (Model.JobProfiles.Any())
                {
                    <ol class="results-list">
                        @foreach (var jobProfile in Model.JobProfiles)
                        {
                            <li class="dfc-code-search-resultitem" data-ga-rank="@jobProfile.Rank">
                                <h3><a class="dfc-code-search-jpTitle" href="/job-profiles/@jobProfile.ResultItemUrlName">@jobProfile.ResultItemTitle</a></h3>
                                @if (!string.IsNullOrWhiteSpace(jobProfile.ResultItemAlternativeTitle))
                                {
                                    <p class="meta dfc-code-search-jpAltTitle"><span class="sr-hidden">Alternative titles for this job include </span>@jobProfile.ResultItemAlternativeTitle</p>
                                }
                                <p class="result-description dfc-code-search-jpOverview">@jobProfile.ResultItemOverview</p>
                                <p class="results-salary">
                                    Salary: <span class="dfc-code-search-jpSalary">@jobProfile.ResultItemSalaryRange</span>
                                </p>
                                @if (jobProfile.JobProfileCategoriesWithUrl.Any())
                                {
                                    <p class="results-categories">
                                        Found in:
                                        @foreach (var category in jobProfile.JobProfileCategoriesWithUrl)
                                        {
                                            var cat = category.Split('|');
                                            <a href="/job-categories/@cat.Last()">@cat.First()</a>
                                        }
                                    </p>
                                }
                            </li>
                        }
                    </ol>
                }
                <ul class="previous-next-navigation">
                    @if (Model.HasNextPage)
                    {
                        <li class="dfc-code-search-next next">
                            <a class="dfc-code-search-nextlink" href="@Model.NextPageUrl" id="nextBtn">
                                <span class="pagination-label">Next</span>
                                <span class="visuallyhidden">page</span>
                                <span class="page-numbers">@Model.NextPageUrlText</span>
                            </a>
                        </li>
                    }
                    @if (Model.HasPreviousPage)
                    {
                        <li class="dfc-code-search-previous previous">
                            <a class="dfc-code-search-previouslink" href="@Model.PreviousPageUrl" id="prevBtn">
                                <span class="pagination-label">Previous</span>
                                <span class="visuallyhidden">page</span>
                                <span class="page-numbers">@Model.PreviousPageUrlText</span>
                            </a>
                        </li>
                    }
                </ul>
            </div>
        </div>
    </div>
</div>